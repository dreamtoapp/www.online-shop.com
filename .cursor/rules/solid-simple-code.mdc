# ðŸ§© SOLID & SIMPLE CODE RULE

- **Always follow the SOLID principles:**
  - **S**: Single Responsibility â€” Each file, function, or class should do one thing only.
  - **O**: Open/Closed â€” Code should be open for extension, but closed for modification.
  - **L**: Liskov Substitution â€” Subtypes must be usable in place of their base types.
  - **I**: Interface Segregation â€” Don't force things to depend on what they don't use.
  - **D**: Dependency Inversion â€” Depend on abstractions, not concrete things.
- **Never write complex code.**
  - If something feels complicated, break it into smaller, easier parts.
  - Use clear names and short functions.
  - Avoid deep nesting and long files.
- **Code should always be easy, short, and simple to understand.**
- If you see complex code, refactor it to be simpler and more readable.

**Simple code is better code!**
description:
globs:
alwaysApply: false
---
